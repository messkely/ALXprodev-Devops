#!/bin/bash

# List of Pokémon to fetch
POKEMON_LIST=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

# Output directory
OUTPUT_DIR="pokemon_data"
mkdir -p "$OUTPUT_DIR"

# Error log
ERROR_LOG="fetch_errors.txt"
> "$ERROR_LOG"

# Array to store background process PIDs
declare -a PIDS

# Function to fetch Pokémon data
fetch_pokemon() {
    local pokemon=$1
    echo "Fetching data for $pokemon..."

    curl -s -f "https://pokeapi.co/api/v2/pokemon/$pokemon" -o "$OUTPUT_DIR/${pokemon}.json"

    if [ $? -eq 0 ]; then
        echo "Saved data to $OUTPUT_DIR/${pokemon}.json ✅"
    else
        echo "❌ Failed to fetch $pokemon" >> "$ERROR_LOG"
    fi
}

# Launch all fetches in parallel and track jobs
for pokemon in "${POKEMON_LIST[@]}"; do
    fetch_pokemon "$pokemon" &
    PIDS+=($!)  # Save the PID
done

# Show background jobs
echo "Running jobs:"
jobs

# Wait for all jobs and handle failures
for pid in "${PIDS[@]}"; do
    wait "$pid" || {
        echo "⚠️ Process with PID $pid failed. Killing all remaining background jobs..."
        # Kill all jobs if one fails
        kill $(jobs -p) 2>/dev/null
        exit 1
    }
done

echo "✅ All Pokémon data fetched successfully."
